@model MordenDoors.ViewModels.CategortyViewModel
<style>
    .checkbox input[type="checkbox"] {
        margin-left: 0px;
    }
    .checkbox-inline
    {
        font-size:18px;
    }
    .checkbox {
        width: 20px;
        height: 20px;
    }
</style>
@using (Html.BeginForm("CreateEditCategory", "Category", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="form-horizontal">
        @if (Model.ID > 0)
        {
            <h2 style="text-align:center">Update Category</h2>
        }
        else
        {
            <h2 style="text-align:center">Create Category</h2>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form">
            <div class="row">
                <div class="form-group">
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label " })
                    @Html.HiddenFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryName, "Category Name", htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                        </div>
                    </div>                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryDescription, "Category Description", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CategoryDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ml-4">
                        @Html.LabelFor(model => model.IsMain, "Is Main", htmlAttributes: new { @class = "control-label checkbox-inline mr-2" })
                        @if (Model.IsMain)
                        {
                            @Html.CheckBoxFor(model => model.IsMain, new { @class = "checkbox mr-2" ,
                           @disabled = "disabled"})
                       }
                        else
                            {
                                @Html.CheckBoxFor(model => model.IsMain, new { @class = "checkbox mr-2" })
                        }
                            @Html.ValidationMessageFor(model => model.IsMain, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.IsActive, "Is Active", htmlAttributes: new { @class = "control-label checkbox-inline mr-2" })
                        @Html.CheckBoxFor(model => model.IsActive, new { @id = "isactive", @class = "checkbox" })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
            @Html.LabelFor(model => model.IsMain, "Is Main", htmlAttributes: new { @class = "control-label col-md-4 checkbox-inline" })
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsMain)
                    @Html.ValidationMessageFor(model => model.IsMain, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, "Is Active", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsActive, new { @id = "isactive" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 text-center">
                    <input type="submit" value="Save" id="InsertRecord" class="btn bg-grow-early text-white"/>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $('#isactive').change(function () {
        if ($(this).prop("checked")) {
            return;
        }
        //toastr["warning"]("Once Disable, you will not be able to find record in list")
        swal("Once Disable, you will not be able to find record in list")
    });

    $('#IsMain').change(function () {
        CheckForMain(this.checked);
    });
    function CheckForMain(isChecked) {
        if (isChecked) {
            $.confirm({
                title: 'Please Note!',
                content: 'Previous main category will be replaced with this new category',
                buttons: {
                    Ok: function () {
                        toastr["success"]("Now this will your main category.")
                    }
                }
            });
        } else {
            
        }
    }
</script>