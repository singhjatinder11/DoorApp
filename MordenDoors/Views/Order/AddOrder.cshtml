@model MordenDoors.ViewModels.OrderViewModel
<style>
    legend {
        font-size: 20px !important;
        color: brown;
    }

    thead,
    tbody tr {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

    tbody {
        display: block;
        /*overflow-y: auto;*/
        table-layout: fixed;
        /*max-height: 250px;*/
    }

    .pointer {
        cursor: pointer;
    }

    a.additem {
        color: #27C46B;
    }

    a.edititem {
        color: #FFC107;
    }

    a.deleteitem {
        color: #E34724;
    }

    /* Switch button */

    .btn-default.btn-on.active,
    .btn-default.btn-off.active {
        background-color: #5BB75B;
        color: white;
    }

    #tbl_order > tbody > tr > td {
        vertical-align: middle;
    }

    .side-panel {
        height: calc(100vh - 100px);
        overflow: hidden;
        overflow-y: auto;
    }

        .side-panel li {
            margin: 10px;
        }

    tr.hide-table-padding td {
        padding: 0;
    }

    .expand-button {
        position: relative;
    }

    .table-layout {
        text-align: center;
        border: 1px solid black;
        border-collapse: collapse;
        font-family: "Trebuchet MS";
        margin: 0 auto 0;
    }

        .table-layout td, .table-layout th {
            border: 1px solid grey;
            padding: 5px 5px 0;
        }

        .table-layout td {
            text-align: left;
        }

    .selected {
        color: red;
        background-color: lightblue !important;
    }

    .subitem .p_quantity, .subitem .p_height, .subitem .p_width, .subitem .measurements, .subitem .tprice, .subitem .deleteitem, .subitem .collasetd span {
        display: none;
    }
    .disableLi, .each {
        pointer-events: none;
    }
    .each input, .each select {
        background-color: rgba(63, 106, 216,.2);
    }
</style>

<script src="~/Scripts/bootstrap-select.min.js"></script>
<link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="main-card mb-3 card px-3">
            <div class="card-header-tab card-header-tab-animation card-header">
                <div class="card-header-title text-center w-100">
                    <i class="header-icon lnr-apartment icon-gradient bg-love-kiss"> </i>
                    <h2 id="lblHeaderOrder" class="font-weight-bold w-100">New Quote Request</h2>
                    <div class="form-group float-right mt-3">
                        @Html.Label("Status", null, htmlAttributes: new { @class = "control-label" })
                        <div class="btn-group" id="status" data-toggle="buttons">
                            <label id="lblQuote" class="btn btn-default btn-on btn-sm active">
                                <input id="rdoQuote" type="radio" value="1" name="orderStatus" checked="checked">QUOTE
                            </label>
                            <label id="lblOrder" class="btn btn-default btn-off btn-sm ">
                                <input id="rdoOrder" type="radio" value="7" name="orderStatus">ORDER
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-row">
                            <div class="col-md-5">
                                <div class="form-group" id="customer">
                                    @Html.Label("Choose Customer", htmlAttributes: new { @class = "control-label required" })
                                    <select id="customerDD" class="form-control" data-live-search="true">
                                        <option data-customer-id="-1" data-tokens="Select Customer">Select Customer</option>
                                        @foreach (SelectListItem i in Model.CustomerList)
                                        {
                                            <option data-customer-id="@i.Value" data-tokens="@i.Text">@i.Text</option>
                                        }
                                    </select>
                                </div>

                            </div>
                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label>Balance</label>
                                            </div>
                                            <div class="col-sm-12">
                                                @Html.TextBox("Balance", new SelectList(string.Empty, "Value", "Text"), " ", new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <label>Credit Limit</label>
                                            </div>
                                            <div class="col-sm-12">
                                                @Html.TextBox("CreditLimit", new SelectList(string.Empty, "Value", "Text"), " ", new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <fieldset>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Customer Address</label>
                                                <textarea id="txtaddress" style="height:170px" class="form-control"></textarea>
                                            </div>
                                            <div class="col-md-6">
                                                <label>Delivery Address<span style="color:red"> *</span></label>
                                                <textarea id="txtaddress2" style="height:170px" class="form-control" validation="true"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>

                            <div class="col-md-7 col-lg-7">
                                <fieldset>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DueDate, "Estimated Delivery Date", htmlAttributes: new { @class = "control-label required" })
                                                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control", placeholder = "Enter Drop-off date here...", @type = "date", id = "OrderDeliveryDate", @min = DateTime.Now.ToString("yyyy-MM-dd"), @max = "2050-12-31" })
                                                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.orders.PO, "PO", htmlAttributes: new { @class = "control-label " })
                                                @Html.TextBoxFor(model => model.orders.PO, new { @class = "form-control", placeholder = "PO", @type = "text", id = "txtpo" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.orders.Job, new { style = "display: none;", @class = "form-control", placeholder = "JOB", @type = "text", id = "txtjob" })
                                    </div>

                                    <div class="form-group" style="margin-top: -15px">
                                        @Html.LabelFor(model => model.orders.Comments, "Comments", htmlAttributes: new { @class = "control-label" })
                                        @Html.TextAreaFor(model => model.orders.Comments, 3, 15, htmlAttributes: new { @class = "form-control", id = "orderComment" })
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="option-item-wrap">
                            <ul id="categry" class="dropdown">
                                @foreach (var cat in Model.CategoryList)
                                {
                                    <li class="catLi">
                                        <label>@cat.Text</label>
                                        <button class="dropdown-toggle catButton" type="button" data-toggle="dropdown" data-id="@cat.Value" data-cat="--Select @cat.Text--" aria-haspopup="true" aria-expanded="false">
                                            --Select @cat.Text-- <i class="fa fa-caret-down"></i>
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="@string.Concat("dropdown-item ","cls_" + cat.Value) catProducts" data-price="0" data-unit="" data-minft="0" data-unitid="0" data-cat="@cat.Text" data-productname="--Select @cat.Text--" data-id="0">--Select @cat.Text--</a>
                                            @foreach (var subcat in Model.Prodcutlist.Where(s => s.CategoryId.ToString() == cat.Value))
                                            {
                                                <a class="@string.Concat("dropdown-item ","cls_" + cat.Value) catProducts" data-price="@subcat.Rate" data-minft="@subcat.MinSqFt" data-unit="@subcat.Units" data-unitid="@subcat.UnitId" data-cat="@cat.Text" data-productname="@subcat.ProductName" data-id="@subcat.ProductId">@string.Concat(subcat.ProductName + " (" + subcat.Rate + " Per/" + @subcat.Units + ")")</a>
                                            }
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <table id="tbl_measurements" class="table table-responsive add-order-table-qty-wrap">
                        <thead>
                            <tr style="font-size:15px">
                                <td colspan="9" class="text-left">
                                    <span class="d-inline-block">Show in :</span>
                                    <ul class="d-inline-block p-0">
                                        <li class="list-inline-item"><input type="radio" name="rdo_pick" class="Inches" checked="checked" value="in" /> Imperial(<span class="text-danger">in</span>)</li>
                                        <li class="list-inline-item"><input type="radio" name="rdo_pick" class="Millimeter" value="mm" /> Metrics(<span class="text-danger">mm</span>)</li>
                                    </ul>
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr id="row-2" data-row="2">
                                <td class="input-inline-wrap w-unit">
                                    <span class="d-inline-block">Width</span>
                                    <ul class="d-inline-block p-0">
                                        <li class="list-inline-item">
                                            <input type="text" maxlength="5" class="Width form-control" />
                                        </li>
                                        <li class="list-inline-item li-fractions">
                                            <select class="Width1 form-control inch-fractions" id="SelectWidthParameter1" name="StudentGender">
                                                <option>0</option>
                                                <option>1</option>
                                                <option>3</option>
                                                <option>5</option>
                                                <option>7</option>
                                                <option>9</option>
                                                <option>11</option>
                                                <option>13</option>
                                                <option>15</option>

                                            </select>
                                        </li>
                                        <li class="ohoslash list-inline-item li-fractions">/</li>
                                        <li class="list-inline-item li-fractions">
                                            <select class="Width2 form-control inch-fractions" id="SelectWidthParameter2" name="StudentGender">
                                                <option>0</option>
                                                <option>2</option>
                                                <option>4</option>
                                                <option>8</option>
                                                <option>16</option>

                                            </select>
                                        </li>
                                    </ul>
                                </td>
                                <td class="input-inline-wrap w-unit">
                                    <span class="d-inline-block">
                                        Height
                                    </span>
                                    <ul class="d-inline-block p-0">
                                        <li class="list-inline-item">
                                            <input type="text" class="Height form-control" maxlength="10">
                                        </li>
                                        <li class="list-inline-item li-fractions">
                                            <select class="hgh1 form-control inch-fractions" id="SelectHeightParameter1" name="StudentGender">
                                                <option>0</option>
                                                <option>1</option>
                                                <option>3</option>
                                                <option>5</option>
                                                <option>7</option>
                                                <option>9</option>
                                                <option>11</option>
                                                <option>13</option>
                                                <option>15</option>
                                            </select>
                                        </li>
                                        <li class="ohoslash list-inline-item li-fractions">
                                            /
                                        </li>
                                        <li class="list-inline-item li-fractions">
                                            <select class="hgh2 form-control inch-fractions" id="SelectHeightParameter2" name="StudentGender">
                                                <option>0</option>
                                                <option>2</option>
                                                <option>4</option>
                                                <option>8</option>
                                                <option>16</option>

                                            </select>
                                        </li>
                                    </ul>
                                </td>
                                <td style="width:100px;" class="input-inline-wrap">
                                    <span class="d-inline-block">
                                        QTY
                                    </span>

                                    <ul class="d-inline-block p-0">
                                        <li class="list-inline-item">
                                            <input type="number" class="quntity form-control" min="1" id="inputQuantity" />
                                        </li>
                                    </ul>
                                </td>
                                <td style="width:110px;" class="right-border-line disabled-input">
                                    <label class="pricepersquarefeet labeltext">$0.00CAD</label>
                                    <label class="text-left w-100"><small>Price Per square feet</small></label>
                                    @*<input type="text" class="totalsqf form-control" />*@
                                </td>
                                <td style="width:110px;" class=" right-border-line disabled-input">
                                    <label class="priceperdoor labeltext">$0.00CAD</label>
                                    <label class="text-left w-100"><small>Price Per Door</small></label>
                                    @*<input type="text" class="totalsqf form-control" />*@
                                </td>
                                <td style="width:110px;" class="disabled-input">
                                    <label class="SubTotal labeltext">$0.00CAD</label>
                                    <label class="text-left w-100"><small>Subtotal</small></label>
                                    @*<input type="text" class="totalsqf form-control" />*@
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="w-100 text-right">
                        <input id="addItemBtn" type="button" value="Add To Quote" class="btn bg-grow-early text-white add-new" />
                    </div>
                    <div class="col-md-12">
                        <fieldset>
                            <legend id="additems-label">Add Quote Items</legend>
                            <div id="div_orderTable">
                                <span class="pull-left" id="errmsg" style="color:red"></span>
                                <table id="tbl_order" class="table table-striped table-responsive  table-d-order-item">
                                    <thead>
                                        <tr style="font-size:15px">
                                            <th style="width:50px" scope="col"></th>
                                            <th style="width:150px;">Product Name</th>
                                            <th hidden>Description</th>
                                            <th style="width:100px;">Quantity</th>
                                            <th class="Calculation" style="width:80px;">Height</th>
                                            <th class="Calculation" style="width:80px;">Width</th>
                                            <th style="width:150px">Total Measurement</th>
                                            <th style="width:150px;">Unit</th>
                                            <th style="width:150px;">Total Price</th>
                                            <th style="width:100px;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                    <div class="col-md-12">
                        <div class="pull-right">
                            <button id="btnSave" type="button" class="btn bg-grow-early text-white add-new" data-placement="top" data-toggle="tooltip" data-title="Save Order" onclick="SaveOrderItem()"><i class="fa fa-save"></i> Save</button>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-7 offset-md-5">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.orders.GST, "GST", htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.orders.GST, new { @class = "form-control", @type = "number", @readonly = "readonly", Value = "0.00" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.orders.PST, "PST", htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.orders.PST, new { @class = "form-control", @type = "number", @readonly = "readonly", Value = "0.00" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.orders.CustomePrice, "Customer discount ", htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.orders.CustomePrice, new { @class = "form-control", id = "CustomePrice", @type = "number", @min = "0" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 ">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.orders.Payableamount, "Amount", htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.orders.Payableamount, new { @class = "form-control", placeholder = "Amount", @type = "text", id = "txtPayableamount", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.orders.Payableamount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 mt-4">
                        <div class="row">
                            <div class="col-md-7 offset-md-5">
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <h4 class="text-success"><b>Total Amount</b></h4>
                                    </div>
                                    <div class="col-md-6 form-group">
                                        @Html.TextBoxFor(model => model.orders.TotalAmount, new { @class = "form-control", placeholder = "TotalAmount", @type = "text", id = "txttotalAmount", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.orders.TotalAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="myModal" role="dialog">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Work Stages</h4>
                                </div>
                                <div class="modal-body">
                                    @Html.Label("Work Stage", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <select id="workStages" class="form-control selectpicker" multiple data-live-search="true" style="width:90px">
                                    </select>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    <button id="save" class="btn btn-width bkgrnd-cyan save-details" type="button" name="save-details">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<table style="display:none">
    <tbody>
        <tr id="clone-row" class="selectionrow2">
            <td class="rowId collasetd" style="width:50px">
                <span id="tdcollapse">+</span>
            </td>
            <td style="width:150px;">
                <label class="p_name">P Name</label>
            </td>
            <td style="width:100px;">
                <label class="p_quantity">1</label>
            </td>
            <td style="width:80px;">
                <label class="p_height">4</label>
            </td>
            <td style="width:80px;">
                <label class="p_width">50</label>
            </td>
            <td style="width:150px;">
                <label class="measurements">1000</label>
            </td>
            <td style="width:150px;">
                <label class="p_unit">20</label>
            </td>
            <td style="width:150px;">
                <label class="tprice">$1000</label>
            </td>
            <td style="width:100px;">
                <a class="edititem pointer" data-toggle="tooltip" title="Edit" style="display:none;"><i class="fa fa-edit"></i></a>
                <a class="deleteitem pointer" data-toggle="tooltip" title="Delete"><i class="fa fa-trash text-danger"></i></a>
            </td>
        </tr>
    </tbody>
</table>
<script type="text/javascript">
    var orderItems = [];
    var orderItemIndexes = [];
    var currentOrderItems = [];
    var currentItemSubTotal = 0;
    var currentUnit = "sqft";
    var selectedUnit = "in";
    var sqft = ["sqft"];
    var lnft = ["linearFeet"];
    var each = ["each"];
    var mmtoinch = 0.03937008;
    var isindividualItem = false;
    var singleItem = true;
    $(document).ready(function () {
        var number = document.getElementById('inputQuantity');
        number.onkeydown = function (e) {
            if (!((e.keyCode > 95 && e.keyCode < 106)
                || (e.keyCode > 47 && e.keyCode < 58)
                || e.keyCode == 8)) {
                return false;
            }
        }
        $('input[type=radio][name=orderStatus]').on("change", function () {
            if (this.value == '1') {
                $("#lblHeaderOrder").html("New Quote Request");
                $("#additems-label").html($("#additems-label").html().replace("Order", "Quote"));
                $("#addItemBtn").val($("#addItemBtn").val().replace("Order","Quote"));
            }
            else {
                $("#lblHeaderOrder").html("New Sales Order");
                $("#additems-label").html($("#additems-label").html().replace("Quote", "Order"));
                $("#addItemBtn").val($("#addItemBtn").val().replace("Quote", "Order"));
            }
        });
        $("#customerDD").on("change", function () {
            $("#orders_GST").val('0');
            $("#orders_PST").val('0');

            var clientid = $("#customerDD option:selected").attr('data-customer-id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCustomerdetail", "Order")',
                data: JSON.stringify({
                    clientid: clientid
                }),
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (response) {
                    if (response) {
                        var customer = response.customer;
                        var categoryList = response.categoryList;
                        var prodcutlist = response.prodcutlist;
                        $("#Balance").val(customer.Balance);
                        $("#CreditLimit").val(customer.CreditLimit);
                        var ship_address = customer.Address1 + ", " + customer.City + ", " + customer.Country + ", " + customer.PostalCode;
                        var bill_address = customer.BillAddrLine1 + ", " + customer.BillAddrCity + ", " + customer.BillAddrCountry + ", " + customer.BillAddrPostalCode;
                        $("#txtaddress").html(bill_address);
                        $("#txtaddress2").html(ship_address);
                        $.each(customer.taxlist, function (index, value) {
                            if (value.Name.indexOf('GST') != -1) {
                                $("#orders_GST").val(value.TaxPercentage);
                            } else if (value.Name.indexOf('PST') != -1) {
                                $("#orders_PST").val(value.TaxPercentage);
                            }
                        });
                        
                        $('#categry').html('');
                        $.each(categoryList, function (index, cat) {
                            var product = (prodcutlist.filter((p) => p.CategoryId == cat.Value)).map((pro, i) => {
                                return '<a class="dropdown-item cls_' + cat.Value + ' catProducts" data-price="' + parseFloat(pro.Rate).toFixed(2) + '" data-minft="' + parseFloat(pro.MinSqFt).toFixed(2) + '" data-unit="' + pro.Units + '" data-unitid="' + pro.UnitId + '" data-cat="' + cat.Text + '" data-productname="' + pro.ProductName + '" data-id="' + pro.ProductId + '">' + pro.ProductName + ' (' + parseFloat(pro.Rate).toFixed(2) + ' Per/' + pro.Units + ')</a>'
                            })
                            $('#categry').append('<li class="catLi">' +
                                '<label>' + cat.Text + '</label>' +
                                '<button class="dropdown-toggle catButton" type="button" data-toggle="dropdown" data-id="' + cat.Value + '" data-cat="--Select ' + cat.Text + '--" aria-haspopup="true" aria-expanded="false">' +
                                '--Select ' + cat.Text + '-- <i class="fa fa-caret-down"></i>' +
                                '</button>' +
                                '<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                                '<a class="dropdown-item cls_' + cat.Value + ' catProducts" data-price="0" data-unit="" data-minft="0" data-unitid="0" data-cat="' + cat.Text + '" data-productname="--Select ' + cat.Text + '--" data-id="0">--Select ' + cat.Text + '--</a>' +
                                product.join('')
                                 +
                                 '</div>' +
                                 '</li>');
                        });
                        
                    }
                },
                failure: function (response) {
                    toastr["error"]("Something went wrong!")
                }
            });
            //refersh Product List
            //getCategorywithProduct(clientid);
            orderItems = [];
            bindProducts();
        });

        function confimt(unit, parentLi) {
            return new Promise(function (resolved, reject) {
                var yesclicked = true;
                $.confirm({
                    title: 'Confirm!',
                    content: 'No door is added, do you want to add a individual item?',
                    buttons: {
                        Yes: function () {
                            isindividualItem = true;
                            $(".catLi").addClass("disableLi");
                            parentLi.removeClass("disableLi");
                            currentUnit = unit;
                            resolved(yesclicked);
                        },
                        No: function () {
                            parentLi.find(".catProducts").eq(0).trigger("click");
                            yesclicked = false;
                            resolved(yesclicked);
                        }
                    }
                });
            });
        }
        $(document).on("click", ".catProducts", function (e) {
            e.preventDefault();
            isindividualItem = $(this).parentsUntil("ul.categry").find('li.catLi:first').hasClass('active') ? false : true;
            var parentLi = $(this).parents("li.catLi");
            var catButton = parentLi.find(".catButton");
            var catId = catButton.attr("data-id");
            var liIndex = parentLi.index();
            unit = $(this).attr("data-unit");
            catButton.html($(this).attr("data-productname") + " <i class=\"fa fa-caret-down\"></i>");
            var productId = $(this).attr("data-id");
            currentUnit = "sqft";
            if (productId == "0") {
                parentLi.removeClass("active");
                $(".catLi").removeClass("disableLi");
                $("#tbl_measurements .Width, #tbl_measurements .Height").attr("disabled", false);
                if (selectedUnit == "in")
                    $("#tbl_measurements .inch-fractions").attr("disabled", false);

                currentOrderItems = RemovedProductList(catId);
                if (liIndex == 0) {
                    currentOrderItems = [];
                    ClearCurrentItem();
                }
                singleItem = true;
                if ($(".categry li .active").length == 0) {
                    $('.pricepersquarefeet').html('$0.00 CAD');
                    $('.priceperdoor').html('$0.00 CAD');
                    $('.SubTotal').html('$0.00 CAD');
                }
            }
            else {
                parentLi.addClass("active");
                isSubItem = liIndex != 0;
                if (liIndex == 0) {
                    singleItem = false;
                    isindividualItem = 0;
                }
                var productName = $(this).attr("data-productname");
                var price = $(this).attr("data-price");
                var unitid = $(this).attr("data-unitid");
                var minft = $(this).attr("data-minft");
                if (liIndex != 0 && currentOrderItems.length == 0)// Checking for main category, always on first position
                {
                    confimt(unit, parentLi).then(function (yesclicked) {
                        if (yesclicked) {
                            var isNew = true;
                            isindividualItem = true;
                            $.each(currentOrderItems, function (i, v) {
                                if (v.CategoryId == catId) {
                                    v.ProductId = productId;
                                    v.ProductName = productName;
                                    v.IsSubItem = isSubItem;
                                    v.Price = parseFloat(price);
                                    v.Unit = unit;
                                    v.UnitId = unitid;
                                    v.MinSqFt = parseFloat(minft);
                                    v.isindividualItem = isindividualItem;
                                    isNew = false;
                                    return false;
                                }
                            });
                            if (isNew) {
                                var currentOrderItem = {
                                    RowId: currentOrderItems.length,
                                    ProductId: productId,
                                    ProductName: productName,
                                    CategoryId: catId,
                                    Price: parseFloat(price),
                                    Unit: unit,
                                    UnitId: unitid,
                                    MinSqFt: parseFloat(minft),
                                    isindividualItem: isindividualItem,
                                    IsSubItem: isSubItem
                                };
                                currentOrderItems.push(currentOrderItem);
                            }
                             calprice();
                        }
                        else {
                            currentOrderItems = [];
                        }
                        singleItem = true;
                        disableMeasurements();
                    });
                }

                var isNew = true;
                $.each(currentOrderItems, function (i, v) {
                    if (v.CategoryId == catId) {
                        v.ProductId = productId;
                        v.ProductName = productName;
                        v.IsSubItem = isSubItem;
                        v.Price = parseFloat(price);
                        v.Unit = unit;
                        v.UnitId = unitid;
                        v.MinSqFt = parseFloat(minft);
                        v.isindividualItem = isindividualItem;
                        isNew = false;
                        return false;
                    }
                });
                if (isNew) {
                    var currentOrderItem = {
                        RowId: currentOrderItems.length,
                        ProductId: productId,
                        ProductName: productName,
                        CategoryId: catId,
                        Price: parseFloat(price),
                        Unit: unit,
                        UnitId: unitid,
                        MinSqFt: parseFloat(minft),
                        isindividualItem: isindividualItem,
                        IsSubItem: isSubItem
                    };
                    currentOrderItems.push(currentOrderItem);
                }
            }
            calprice();
            if (singleItem) {
                disableMeasurements();
            }
        });

        $('input[type=radio][name=rdo_pick]').on("change", function () {
            selectedUnit = this.value;
            if (this.value == 'in')
                $(".li-fractions").css("visibility", "visible");
            else
                $(".li-fractions").css("visibility", "hidden");
            calprice();
        });
        $(".Width, .Height, .Width, .Width, .hgh1, .hgh2, .quntity").on("keyup blur mouseup change", function () {
            calprice();
        });
        $("#addItemBtn").on("click", function () {
            if (currentOrderItems.length == 0) {
                showAlert("Please select a door first.", "error");
                return;
            }
            var mainWidth = $(".Width").val();
            mainWidth = mainWidth == '' || isNaN(mainWidth) ? 0 : parseFloat(mainWidth);
            var width = mainWidth;
            var mainHeight = $(".Height").val();
            mainHeight = mainHeight == '' || isNaN(mainHeight) ? 0 : parseFloat(mainHeight);
            var height = mainHeight;
            if (selectedUnit == "in") {
                var w1 = $(".Width1").val();
                var w2 = $(".Width2").val();
                width = width + (w1 == '0' || w2 == '0' ? 0 : parseFloat(w1 / w2));
                var h1 = $(".hgh1").val();
                var h2 = $(".hgh2").val();
                height = height + (h1 == '0' || h2 == '0' ? 0 : parseFloat(h1 / h2));
                mainWidth = width;
                mainHeight = height;

              
            }
            else {
                width = width * mmtoinch;
                height = height * mmtoinch;

            }
            var qty = $(".quntity").val();
            qty = qty == '' || isNaN(qty) ? 0 : parseFloat(qty);

            if (!(sqft.includes(currentUnit) && width != 0 && height != 0) && !(lnft.includes(currentUnit) && width != 0) && !each.includes(currentUnit)) {
                showAlert("Please fill all the measurements.", "error");
                return;
            }
          
            if (qty == 0) {
                showAlert("Please add quantity.", "error");
                return;
            }
            currentOrderItems[0].MainWidth = mainWidth;
            currentOrderItems[0].MainHeight = mainHeight;
            currentOrderItems[0].SelectedUnit = selectedUnit;
            currentOrderItems[0].Width = width;
            currentOrderItems[0].Height = height;
            currentOrderItems[0].Quantity = qty;
            currentOrderItems[0].totalMeasure = totalMeasure;
            currentOrderItems[0].SubTotal = currentItemSubTotal;
            orderItems.push({ RowId: orderItems.length, Items: currentOrderItems });
            bindProducts();
        });
        $("#tbl_order").on("click", ".deleteitem", function () {
            var rowId = $(this).attr("data-rowid");
            $.confirm({
                title: 'Confirm!',
                content: 'Do you really want to delete this order item?',
                buttons: {
                    Yes: function () {
                        orderItems = orderItems.filter(function (v) {
                            if (v.RowId == rowId) {
                                return false;
                            }
                            return true;
                        });
                        $.each(orderItems, function (i, v) {
                            v.RowId = i
                        });
                        bindProducts();
                    },
                    No: function () { }
                }
            });
        });
        $("#CustomePrice").change("change, keyup, blur", function () {
            var ordersGST = $("#orders_GST").val();
            ordersGST = ordersGST == "" || isNaN(ordersGST) ? 0 : parseFloat(ordersGST);

            var ordersPST = $("#orders_PST").val();
            ordersPST = ordersPST == "" || isNaN(ordersPST) ? 0 : parseFloat(ordersPST);

            var totalAmount = $("#txtPayableamount").val();
            totalAmount = totalAmount == "" || isNaN(totalAmount) ? 0 : parseFloat(totalAmount);

            var discount = $(this).val();
            discount = discount == "" || isNaN(discount) ? 0 : parseFloat(discount);
            if (discount > totalAmount || discount < 0) {
                discount = 0;
                $(this).val(discount)
            }

            totalAmount = totalAmount + ordersGST + ordersPST - discount;
            $("#txttotalAmount").val(totalAmount.toFixed(2));

        });

        $('#tbl_order').on("click", ".trcollapse .collasetd span.collapseSpan", function () {
            $(this).text(function (_, value) { return value == '-' ? '+' : '-' });
            $(this).parents('.trcollapse').nextUntil('.trcollapse').slideToggle(0, 'linear');
        });
    });
    function disableMeasurements() {
        if (unit !== undefined && each.includes(unit)) {
            $('.w-unit .list-inline-item').addClass(unit);
        }
        else {
            $('.w-unit .list-inline-item').removeClass('each');
        }
    }
    function RemovedProductList(catId) {
        return currentOrderItems.filter(function (v) {
            if (v.CategoryId == catId) {
                return false;
            }
            return true;
        });
    }
    var totalMeasure = 1;
    function calprice() {
        if (currentOrderItems.length == 0)
            return;
        $(".pricepersquarefeet").html("$0.00 CAD");
        $(".priceperdoor").html("$0.00 CAD");
        $(".SubTotal").html("$0.00 CAD");
        var width = $(".Width").val();
        width = width == '' || isNaN(width) ? 0 : parseFloat(width);
        var height = $(".Height").val();
        height = height == '' || isNaN(height) ? 0 : parseFloat(height);
        if (selectedUnit == "in") {
            var w1 = $(".Width1").val();
            var w2 = $(".Width2").val();
            width = width + (w1 == '0' || w2 == '0' ? 0 : parseFloat(w1 / w2));
            var h1 = $(".hgh1").val();
            var h2 = $(".hgh2").val();
            height = height + (h1 == '0' || h2 == '0' ? 0 : parseFloat(h1 / h2));
        }
        else {
            width = width * mmtoinch;
            height = height * mmtoinch;
        }
        var qty = $(".quntity").val();
        qty = qty == '' || isNaN(qty) ? 0 : parseFloat(qty);
        var priceperDoor = 0;
        var _totalvalue = 0.0;
        var mainProMinSqFt = 0;
        totalMeasure = 1;
        $.each(currentOrderItems, function (i, v) {
            if (!v.IsSubItem) {
                mainProMinSqFt = v.MinSqFt;
            }
            if (sqft.includes(v.Unit))
                totalMeasure = (width * height) / 144;
            else if (lnft.includes(v.Unit))
                totalMeasure = height / 12;

            if (totalMeasure < mainProMinSqFt)
                totalMeasure = mainProMinSqFt;

            if (sqft.includes(v.Unit) && v.isindividualItem && totalMeasure < v.MinSqFt) {
                totalMeasure = v.MinSqFt;
            }
            _totalvalue = (parseFloat(_totalvalue) + parseFloat(v.Price.toFixed(2))).toFixed(2);
            if (!v.IsSubItem || currentOrderItems.length == 1) {
                $(".pricepersquarefeet").html("$" + _totalvalue + " CAD");
            }
            else {
                $(".pricepersquarefeet").html("$" + _totalvalue + " CAD");
            }
            priceperDoor += v.Price * totalMeasure;
        });
        $(".priceperdoor").html("$" + priceperDoor.toFixed(2) + " CAD");
        currentItemSubTotal = priceperDoor * qty;
        $(".SubTotal").html("$" + currentItemSubTotal.toFixed(2) + " CAD");
    }
    function showAlert(msg, type) {
        $.alert({
            title: 'Alert!',
            content: msg
        });
    }
    function bindProducts() {
        var itemHtml = "";
        var totalAmount = 0;
        for (var i = 0; i < orderItems.length; i++) {
            var subItemHtml = "<tr class=\"selectionrow2 subitem\"><td colspan='9'><table>";
            for (var j = 0; j < orderItems[i].Items.length; j++) {
                var item = orderItems[i].Items[j];
                var productName = item.ProductName;
                if (orderItems[i].Items.length == 1) {
                    $("#clone-row").find("#tdcollapse").html('-');
                    $("#tdcollapse").removeClass("collapseSpan");
                }
                else {
                    $("#clone-row").find("#tdcollapse").html('+');
                    $("#tdcollapse").addClass("collapseSpan");
                }
                if (item.IsSubItem)
                    productName += " ($" + item.Price + " per/" + item.Unit + ")";
                $("#clone-row").find(".p_name").html(productName);
                $("#clone-row").find(".p_unit").html(item.Unit);
                $("#clone-row").find(".deleteitem").attr("data-rowid", item.RowId);
                if (!item.IsSubItem || j == 0) {
                    $("#clone-row").find(".p_quantity").html(item.Quantity);
                    $("#clone-row").find(".p_height").html(item.MainHeight == "0.00" ? item.MainHeight = "" + item.SelectedUnit == "" : item.MainHeight.toFixed(2) + " " + item.SelectedUnit);
                    $("#clone-row").find(".p_width").html(item.MainWidth == "0.00" ? item.MainWidth = "" + item.SelectedUnit == "" : item.MainWidth.toFixed(2) + " " + item.SelectedUnit);
                    $("#clone-row").find(".measurements").html(((item.Height * item.Width) / 144) * item.Quantity == "0.00" ? ((item.Height * item.Width) / 144) * item.Quantity == "-" : (((item.Height * item.Width) / 144) * item.Quantity).toFixed(2));
                    $("#clone-row").find(".tprice").html(item.SubTotal.toFixed(2));
                    totalAmount += item.SubTotal;
                }
                if (item.Unit == 'each') {
                    $("#clone-row").find(".p_height").hide();
                    $("#clone-row").find(".p_width").hide();
                    $("#clone-row").find(".measurements").hide();
                }
                else {
                    $("#clone-row").find(".p_height").show();
                    $("#clone-row").find(".p_width").show();
                    $("#clone-row").find(".measurements").show();
                }
                if (j == 0)
                    itemHtml += "<tr class=\"selectionrow2 trcollapse\">" + $("#clone-row").html() + "</tr>";
                else
                    subItemHtml += "<tr class=\"selectionrow2\">" + $("#clone-row").html() + "</tr>";
            }
            subItemHtml += "</table></td></tr>";
            if (orderItems[i].Items.length > 1)
                itemHtml += subItemHtml;
        }
        $("#tbl_order tbody").html(itemHtml);
        LoadAmounts(totalAmount);
        ClearCurrentItem();
    }
    function ClearCurrentItem() {
        currentOrderItems = [];
        $("#categry .catLi").removeClass("active").removeClass("disableLi");
        $("#categry .catButton").each(function () {
            $(this).html($(this).attr("data-cat") + '<i class="fa fa-caret-down"></i>');
        });
        $("#tbl_measurements").find("input[type=text], input[type=number]").val("");
        $("#tbl_measurements").find("select").val("0");
        $(".pricepersquarefeet").html("$0.00 CAD");
        $(".priceperdoor").html("$0.00 CAD");
        $(".SubTotal").html("$0.00 CAD");
        unit = '';
        disableMeasurements();
    }
    
    function LoadAmounts(subTotal) {
        var gst = $("#orders_GST").val();
        gst = gst == "" || isNaN(gst) ? 0 : parseFloat(gst);
        var pst = $("#orders_PST").val();
        pst = pst == "" || isNaN(pst) ? 0 : parseFloat(pst);

        var totalAmount = parseFloat(subTotal);
        $("#txtPayableamount").val(totalAmount.toFixed(2));

        var discount = $("#CustomePrice").val();
        discount = discount == "" || isNaN(discount) ? 0 : parseFloat(discount);
        if (discount > totalAmount || discount < 0) {
            discount = 0;
            $("#CustomePrice").val(discount)
        }

        totalAmount = totalAmount + gst + pst - discount;
        $("#txttotalAmount").val(totalAmount.toFixed(2));
    }

    // For save order items
    function SaveOrderItem() {
        var request = "Quote No- ";
        var orderStatus = $('input[name=orderStatus]:checked').val();
        if (orderItems.length > 0) {
            var checkItem = {
                customerID: $("#customer").find(':selected').data('customer-id'),
                OrderDDate: $("#OrderDeliveryDate").val(),
                orderComment: $("#orderComment").val(),
                orderStatus: orderStatus,
                // delivery address data
                Address1: $("#txtaddress").val(),
                Address2: $("#txtaddress2").val(),
                Country: "",
                City: "",
                Pincode: "",
                PO: $("#txtpo").val(),
                Job: "",
                CustomePrice: $("#CustomePrice").val(),
                Payableamount: $("#txtPayableamount").val(),
                Totalamount: $("#txttotalAmount").val(),
                GST: $("#orders_GST").val(),
                PST: $("#orders_PST").val()
            }
            if (checkItem.customerID != "-1" && checkItem.OrderDDate != "" && checkItem.Address1 != "" && checkItem.Address2 != "") {
                $("#btnSave").attr("disabled", true);
                var detailItems = [];
                detailItems.push(checkItem);
                $('.loader').css('display', 'flex');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveOrder", "Order")',
                    data: JSON.stringify({
                        OrderItems: orderItems,
                        UserItems: detailItems
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function (response) {
                        $('.loader').css('display', 'none');
                        if (checkItem.orderStatus != 1) {
                            request = "Order No- ";
                        }
                        if (response.status) {
                            swal({
                                title: "Success!",
                                text: request + response.RequestID + " is successfully added.",
                                icon: "success",
                                button: "Ok"
                            })
                                .then((willOk) => {
                                    if (willOk) {
                                        if (orderStatus == 1) {
                                            window.location.href = '/Quotes';
                                        } else {
                                            window.location.href = '/Order';
                                        }
                                    }
                                });
                        } else {
                            toastr["error"]("Something went wrong!")
                        }
                    },
                    failure: function (response) {
                        toastr["error"]("Something went wrong!")
                        $('.loader').css('display', 'none');
                    }
                });
            } else {
                toastr["warning"]("Required field are mondatory.")
            }
        } else {
            toastr["warning"]("No item in your order list Or you forget to save an updated item.")
        }
    }
</script>